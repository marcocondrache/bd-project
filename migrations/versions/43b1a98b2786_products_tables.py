"""products tables

Revision ID: 43b1a98b2786
Revises: 6fcef00398c2
Create Date: 2024-04-22 10:52:17.921922

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '43b1a98b2786'
down_revision = '6fcef00398c2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('guid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guid'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('product_categories', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_categories_id'), ['id'], unique=False)

    op.create_table('products',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('guid', sa.UUID(), nullable=False),
    sa.Column('owner_seller_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('brand', sa.String(length=255), nullable=True),
    sa.Column('is_second_hand', sa.Boolean(), nullable=False),
    sa.Column('current_sequence', sa.Integer(), nullable=False),
    sa.Column('current_price', sa.Float(), nullable=False),
    sa.Column('current_currency', sa.String(length=3), nullable=False),
    sa.Column('current_stock', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_seller_id'], ['sellers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guid')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_products_id'), ['id'], unique=False)

    op.create_table('product_categories_association',
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('product_category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_category_id'], ['product_categories.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], )
    )
    with op.batch_alter_table('buyers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_destination_address', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('current_card_number', sa.String(length=255), nullable=False))
        batch_op.drop_column('card_number')
        batch_op.drop_column('destination_address')

    with op.batch_alter_table('sellers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_iban', sa.String(length=255), nullable=False))
        batch_op.drop_column('iban')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sellers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('iban', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.drop_column('current_iban')

    with op.batch_alter_table('buyers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('destination_address', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('card_number', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.drop_column('current_card_number')
        batch_op.drop_column('current_destination_address')

    op.drop_table('product_categories_association')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_id'))

    op.drop_table('products')
    with op.batch_alter_table('product_categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_categories_id'))

    op.drop_table('product_categories')
    # ### end Alembic commands ###
