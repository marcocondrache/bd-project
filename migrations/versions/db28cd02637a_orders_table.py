"""orders table

Revision ID: db28cd02637a
Revises: 50d9a9739e0f
Create Date: 2024-05-22 20:32:12.768481

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'db28cd02637a'
down_revision = '50d9a9739e0f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('buyers_orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cart_id', sa.Integer(), nullable=False),
    sa.Column('guid', sa.UUID(), nullable=False),
    sa.Column('current_status', sa.Enum('CREATED', 'COMPLETED', name='buyersorderstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guid')
    )
    with op.batch_alter_table('buyers_orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_buyers_orders_id'), ['id'], unique=False)

    op.create_table('sellers_orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('buyer_order_id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('guid', sa.UUID(), nullable=False),
    sa.Column('current_status', sa.Enum('CREATED', 'COMPLETED', name='sellersorderstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['buyer_order_id'], ['buyers_orders.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['sellers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guid')
    )
    with op.batch_alter_table('sellers_orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sellers_orders_id'), ['id'], unique=False)

    op.create_table('ordered_products',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sellers_order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sellers_order_id'], ['sellers_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ordered_products', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ordered_products_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ordered_products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ordered_products_id'))

    op.drop_table('ordered_products')
    with op.batch_alter_table('sellers_orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sellers_orders_id'))

    op.drop_table('sellers_orders')
    with op.batch_alter_table('buyers_orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_buyers_orders_id'))

    op.drop_table('buyers_orders')
    # ### end Alembic commands ###
