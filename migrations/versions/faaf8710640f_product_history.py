"""product history

Revision ID: faaf8710640f
Revises: fcd9614801f8
Create Date: 2024-04-27 16:46:26.891768

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'faaf8710640f'
down_revision = 'fcd9614801f8'
branch_labels = None
depends_on = None


create_trigger_fun = """
CREATE OR REPLACE FUNCTION update_product_history()
    RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO product_history(product_id, sequence, price, currency, stock, deleted_at)
    VALUES (NEW.id, NEW.current_sequence, NEW.current_price, NEW.current_currency, NEW.current_stock, NEW.deleted_at);
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
"""

create_trigger = """
CREATE TRIGGER after_update_product_history
    AFTER INSERT OR UPDATE OF current_price, current_currency, current_stock, deleted_at ON products
    FOR EACH ROW EXECUTE FUNCTION update_product_history();
"""

drop_trigger = """
DROP TRIGGER after_update_product_history ON products;
"""

drop_trigger_fun = """
DROP FUNCTION update_product_history;
"""


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('sequence', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('stock', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('product_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_history_id'), ['id'], unique=False)

    op.execute(create_trigger_fun)
    op.execute(create_trigger)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('product_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_history_id'))

    op.drop_table('product_history')
    op.execute(drop_trigger)
    op.execute(drop_trigger_fun)
    # ### end Alembic commands ###
